500000
TMPDIR = /scratch/global/yangjunjie/phi/546314/
PYSCF_TMPDIR = /scratch/global/yangjunjie/phi/546314/
#INFO: **** input file is /home/yangjunjie/work/thc-least-square-in-supercell/phi-in-supercell.py ****
import os, sys
import numpy, scipy
import scipy.linalg
import pyscf
from pyscf.pbc import gto

tmpdir = pyscf.lib.param.TMPDIR
stdout = sys.stdout

cell = pyscf.pbc.gto.Cell()
cell.atom  = 'He 2.0000 2.0000 2.0000; He 2.0000 2.0000 6.0000'
cell.basis = '321g'
cell.a = numpy.diag([4.0000, 4.0000, 8.0000])
cell.unit = 'bohr'
cell.verbose = 5
cell.stdout = stdout
cell.build()

nao = cell.nao_nr()

kmesh = numpy.asarray([4] * 3)
vk = kpts = cell.make_kpts(kmesh)
nk = len(vk)

from pyscf.pbc.tools.k2gamma import translation_vectors_for_kmesh
vr = rpts = translation_vectors_for_kmesh(cell, kmesh=kmesh, wrap_around=False)
nr = len(vr)

scell = pyscf.pbc.tools.pbc.super_cell(cell.copy(deep=True), kmesh, wrap_around=False)

gmesh = numpy.asarray([11] * 3)
ng = numpy.prod(gmesh)

coord0 = cell.gen_uniform_grids(gmesh, wrap_around=False)
coord1 = coord0[None, :] + vr[:, None]
coord1 = coord1.reshape(nr * ng, 3)

phi0 = scell.pbc_eval_gto('GTOval', coord0)
phi0 = phi0.reshape(ng, nr, nao)

phi = scell.pbc_eval_gto('GTOval', coord1)
phi = phi.reshape(nr, ng, nr, nao)

theta = numpy.einsum('kx,rx->kr', vk, vr)
phase = numpy.exp(-1j * theta)

phi_k_1 = numpy.einsum('grm,kr->kgm', phi0, phase.conj())
phi_k_2 = numpy.einsum("rgsm,kr,ls->kglm", phi, phase, phase.conj()) / nr

err_info = []

for k1k2 in range(nk * nk):
    k1, k2 = divmod(k1k2, nk)
    phi2 = phi_k_2[k1, :, k2, :]

    if (k1k2 + 1) % (nk * nk // 10) == 0:

        print(f"Progress: {(k1k2 + 1): 5d} / {nk * nk}")

    if k1 != k2:
        err = abs(phi2).max()
        
        if not abs(phi2).max() < 1e-8:
            print(f"err = {err:6.2e}, k1 = {k1}, k2 = {k2}")
            print(phi2[:10, :])
            assert 1 == 2

    else:
        phi_ = cell.pbc_eval_gto('GTOval', coord0, kpt=vk[k1])
        phi_ = numpy.asarray(phi_)

        err = abs(phi_ - phi2).max()
        if not err < 1e-8:
            print(f"err = {err:6.2e}, k1 = {k1}, k2 = {k2}")
            print(phi_[:10, :])
            print(phi2[:10, :])
            assert 1 == 2
            
        err = abs(phi_k_1[k1, :] - phi2).max()
        if not err < 1e-8:
            print(f"err = {err:6.2e}, k1 = {k1}, k2 = {k2}")
            print(phi_k_1[k1, :10, :])
            print(phi2[:10, :])
            assert 1 == 2

print("All tests passed")

#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='pauling034', release='3.10.0-327.36.3.el7.x86_64', version='#1 SMP Thu Oct 20 04:56:07 EDT 2016', machine='x86_64')  Threads 28
Python 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.0  h5py 3.11.0
Date: Sun Aug 11 22:34:13 2024
PySCF version 2.6.2
PySCF path  /home/yangjunjie/packages/pyscf/py310-pyscf
GIT HEAD (branch master) ca8c7c1680defdfee2380eda3af3a28d9fb375cb

[ENV] PYSCF_MAX_MEMORY 500000
[ENV] PYSCF_TMPDIR /scratch/global/yangjunjie/phi/546314/
[CONFIG] conf_file /home/yangjunjie/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 500000 
[INPUT] num. atoms = 2
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = bohr
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     1.058354421840   1.058354421840   1.058354421840 AA    2.000000000000   2.000000000000   2.000000000000 Bohr   0.0
[INPUT]  2 He     1.058354421840   1.058354421840   3.175063265520 AA    2.000000000000   2.000000000000   6.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  13.6267           0.17523
                                1.99935           0.893483
[INPUT] 0    0    [1    /1   ]  0.382993             1

Ewald components = 0.0736089428601405, -3.00008278569653, 0.08917636335577
nuclear repulsion = -2.83729747948062
number of shells = 4
number of NR pGTOs = 6
number of NR cGTOs = 4
basis = 321g
ecp = {}
CPU time:         3.43
lattice vectors  a1 [4.000000000, 0.000000000, 0.000000000]
                 a2 [0.000000000, 4.000000000, 0.000000000]
                 a3 [0.000000000, 0.000000000, 8.000000000]
dimension = 3
low_dim_ft_type = None
Cell volume = 128
rcut = 11.574358756914298 (nimgs = [3 3 2])
lattice sum = 173 cells
precision = 1e-08
pseudo = None
ke_cutoff = 1151.1727246754501
    = [ 63  63 125] mesh (496125 PWs)
Progress:   409 / 4096
Progress:   818 / 4096
Progress:  1227 / 4096
Progress:  1636 / 4096
Progress:  2045 / 4096
Progress:  2454 / 4096
Progress:  2863 / 4096
Progress:  3272 / 4096
Progress:  3681 / 4096
Progress:  4090 / 4096
All tests passed

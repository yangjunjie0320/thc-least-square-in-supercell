500000
TMPDIR = /scratch/global/yangjunjie/phi/546352/
PYSCF_TMPDIR = /scratch/global/yangjunjie/phi/546352/
#INFO: **** input file is /home/yangjunjie/work/thc-least-square-in-supercell/phi-in-supercell.py ****
import os, sys
import numpy, scipy
import scipy.linalg
import pyscf
from pyscf.pbc import gto

tmpdir = pyscf.lib.param.TMPDIR
stdout = sys.stdout

cell = pyscf.pbc.gto.Cell()
cell.atom  = 'He 2.0000 2.0000 2.0000; He 2.0000 2.0000 6.0000'
cell.basis = '321g'
cell.a = numpy.diag([4.0000, 4.0000, 8.0000])
cell.unit = 'bohr'
cell.verbose = 5
cell.stdout = stdout
cell.build()

nao = cell.nao_nr()

kmesh = numpy.asarray([4] * 3)
vk = kpts = cell.make_kpts(kmesh)
nk = len(vk)

from pyscf.pbc.tools.k2gamma import translation_vectors_for_kmesh
vr = rpts = translation_vectors_for_kmesh(cell, kmesh=kmesh, wrap_around=False)
nr = len(vr)

scell = pyscf.pbc.tools.pbc.super_cell(cell.copy(deep=True), kmesh, wrap_around=False)

gmesh = numpy.asarray([10] * 3)
ng = numpy.prod(gmesh)

coord0 = cell.gen_uniform_grids(gmesh, wrap_around=False)
coord1 = coord0[None, :] + vr[:, None]
coord1 = coord1.reshape(nr * ng, 3)

phi0 = scell.pbc_eval_gto('GTOval', coord0)
phi0 = phi0.reshape(ng, nr, nao)

phi = scell.pbc_eval_gto('GTOval', coord1)
zeta1 = numpy.einsum("Im,Jm,In,Jn->IJ", phi, phi, phi, phi, optimize=True)
zeta1 = zeta1.reshape(nr, ng, nr, ng)
rho1 = numpy.einsum("gm,gn->gmn", phi, phi, optimize=True)
rho1 = rho1.reshape(nr, ng, nr, nao, nr, nao)
print(f"zeta1: {zeta1.shape}")
print(f"rho1: {rho1.shape}")

phi = phi.reshape(nr, ng, nr, nao)
rho2 = numpy.einsum("rgsm,rgtn->rgsmtn", phi, phi, optimize=True)
assert rho2.shape == (nr, ng, nr, nao, nr, nao)

rho3 = numpy.einsum("grm,gsn->grmsn", phi0, phi0, optimize=True)
assert rho3.shape == (ng, nr, nao, nr, nao)
rhs = numpy.einsum("grm,grm,hrm,hrm->gh", phi0, phi0, phi0, phi0, optimize=True)

from pyscf.lib.scipy_helper import pivoted_cholesky
chol, perm, rank = pivoted_cholesky(rhs)
perm = perm[:rank]
zeta = rhs[:, perm] @ numpy.linalg.pinv(rhs[perm][:, perm])
print(perm)

rho4 = numpy.einsum("gI,Irm,Isn->grmsn", zeta, phi0[perm], phi0[perm], optimize=True)
assert rho4.shape == (ng, nr, nao, nr, nao)
err = abs(rho3 - rho4).max()
assert err < 1e-10, err
print("All tests passed")
#INFO: ******************** input file end ********************


System: uname_result(system='Linux', node='pauling034', release='3.10.0-327.36.3.el7.x86_64', version='#1 SMP Thu Oct 20 04:56:07 EDT 2016', machine='x86_64')  Threads 28
Python 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
numpy 1.26.4  scipy 1.14.0  h5py 3.11.0
Date: Mon Aug 12 14:03:29 2024
PySCF version 2.6.2
PySCF path  /home/yangjunjie/packages/pyscf/py310-pyscf
GIT HEAD (branch master) ca8c7c1680defdfee2380eda3af3a28d9fb375cb

[ENV] PYSCF_MAX_MEMORY 500000
[ENV] PYSCF_TMPDIR /scratch/global/yangjunjie/phi/546352/
[CONFIG] conf_file /home/yangjunjie/.pyscf_conf.py
[INPUT] verbose = 5
[INPUT] max_memory = 500000 
[INPUT] num. atoms = 2
[INPUT] num. electrons = 4
[INPUT] charge = 0
[INPUT] spin (= nelec alpha-beta = 2S) = 0
[INPUT] symmetry False subgroup None
[INPUT] Mole.unit = bohr
[INPUT] Symbol           X                Y                Z      unit          X                Y                Z       unit  Magmom
[INPUT]  1 He     1.058354421840   1.058354421840   1.058354421840 AA    2.000000000000   2.000000000000   2.000000000000 Bohr   0.0
[INPUT]  2 He     1.058354421840   1.058354421840   3.175063265520 AA    2.000000000000   2.000000000000   6.000000000000 Bohr   0.0
[INPUT] ---------------- BASIS SET ---------------- 
[INPUT] l, kappa, [nprim/nctr], expnt,             c_1 c_2 ...
[INPUT] He
[INPUT] 0    0    [2    /1   ]  13.6267           0.17523
                                1.99935           0.893483
[INPUT] 0    0    [1    /1   ]  0.382993             1

Ewald components = 0.0736089428601405, -3.00008278569653, 0.08917636335577
nuclear repulsion = -2.83729747948062
number of shells = 4
number of NR pGTOs = 6
number of NR cGTOs = 4
basis = 321g
ecp = {}
CPU time:         3.43
lattice vectors  a1 [4.000000000, 0.000000000, 0.000000000]
                 a2 [0.000000000, 4.000000000, 0.000000000]
                 a3 [0.000000000, 0.000000000, 8.000000000]
dimension = 3
low_dim_ft_type = None
Cell volume = 128
rcut = 11.574358756914298 (nimgs = [3 3 2])
lattice sum = 173 cells
precision = 1e-08
pseudo = None
ke_cutoff = 1151.1727246754501
    = [ 63  63 125] mesh (496125 PWs)
zeta1: (64, 1000, 64, 1000)
rho1: (64, 1000, 64, 4, 64, 4)
[557 552 468 463 550 507 502  57  52 957 952 597 592 559 500  50   8   2
 950 590  98 908  92 902 998 992  59 509   0 599 959  90 900 990   9]
Traceback (most recent call last):
  File "/home/yangjunjie/work/thc-least-square-in-supercell/phi-in-supercell.py", line 66, in <module>
    assert err < 1e-10, err
AssertionError: 0.026364581455516407
